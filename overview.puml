@startuml

entity "Button" as button
control "MQTT Server" as mqtt
control "Clipping Service" as clipping
control "Venue Service" as venue
entity "Camera" as camera
database "Local Storage Server" as localstorage
control "Video Processing Service" as postprocess
database "Sync Queue" as sync
database "Video Delivery Server" as s3
database "Database of videos" as db

button -> mqtt : Button pressed (msg contains MAC address) message
mqtt -> clipping : Relay message
clipping -> venue : Request camera(s) for venue
venue --> clipping : Return camera(s)
loop for each camera
    loop for recording length
        clipping -> camera: Request video
        camera -> clipping: Return video
    end
end

== Recording length reached ==

clipping -> localstorage: Save video
clipping -> postprocess: Begin processing
postprocess -> localstorage: Request video file
postprocess <- localstorage: Return video file
postprocess -> postprocess: Add pre-roll, overlay and post-roll
postprocess -> localstorage: Save video to sync queue

== Always running ==
sync -> localstorage: Request next video file in queue
localstorage -> sync: Return video file
sync -> s3: Send video file to distribution
alt Success
    sync -> db: Add record to database
    sync -> localstorage: Remove file
else failure
    sync -> localstorage: Move file to back of queue
end

@enduml
